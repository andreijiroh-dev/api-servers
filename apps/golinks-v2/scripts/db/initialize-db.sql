/*

The following were generated by Prisma using the following command in Prisma CLI:

	yarn workspace @andreijiroh-dev/golinks-rewrite prisma migrate diff \
		--from-empty --to-schema-datamodel ./prisma/schema.prisma ]
		--script --output ./scripts/db/initialize-db.sql

To initalize your database locally, run the following wrangler command:

	yarn workspace @andeijiroh-dev/golinks-rewrite wrangler d1 execute \
		golinks --local --file ./scripts/dv/initialize-db.sql

DO NOT RUN THIS SQL SCRIPT IN PRODUCTION! Instead, run yarn migrate:prod in the
context of this app (@andreijiroh-dev/golinks-rewrite subpackage) to initalize
your database and update schemas.

*/

-- CreateTable
CREATE TABLE "GoLink" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "slug" TEXT NOT NULL,
    "targetUrl" TEXT NOT NULL DEFAULT 'https://wiki.andreijiroh.xyz/golinks',
    "is_active" BOOLEAN NOT NULL DEFAULT true,
    "deactivation_reason" TEXT,
    "created_on" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_on" DATETIME NOT NULL
);

-- CreateTable
CREATE TABLE "DiscordInviteLink" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "slug" TEXT NOT NULL,
    "inviteCode" TEXT NOT NULL,
    "name" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "nsfw" BOOLEAN NOT NULL DEFAULT false,
    "is_active" BOOLEAN NOT NULL DEFAULT true,
    "deactivation_reason" TEXT,
    "created_on" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_on" DATETIME NOT NULL
);

-- CreateTable
CREATE TABLE "WikiLinks" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "slug" TEXT NOT NULL,
    "targetUrl" TEXT NOT NULL,
    "is_active" BOOLEAN NOT NULL DEFAULT true,
    "deactivation_reason" TEXT,
    "created_on" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_on" DATETIME NOT NULL
);

-- CreateTable
CREATE TABLE "SlackBotToken" (
    "teamId" TEXT NOT NULL PRIMARY KEY,
    "enterprise_install" BOOLEAN NOT NULL DEFAULT false,
    "token" TEXT NOT NULL,
    "created_on" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_on" DATETIME NOT NULL
);

-- CreateTable
CREATE TABLE "GitHubOAuthChallenge" (
    "id" TEXT NOT NULL PRIMARY KEY,
    "challenge" TEXT NOT NULL,
    "code" TEXT,
    "metadata" TEXT NOT NULL,
    "username" TEXT,
    "userId" TEXT,
    "created_on" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_on" DATETIME NOT NULL,
    "expires_on" DATETIME NOT NULL
);

-- CreateTable
CREATE TABLE "ApiToken" (
    "id" TEXT NOT NULL PRIMARY KEY,
    "token" TEXT NOT NULL,
    "userId" TEXT NOT NULL,
    CONSTRAINT "ApiToken_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

-- CreateTable
CREATE TABLE "User" (
    "id" TEXT NOT NULL PRIMARY KEY,
    "username" TEXT NOT NULL,
    "email" TEXT,
    "site_admin" BOOLEAN NOT NULL DEFAULT false,
    "created_on" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_on" DATETIME NOT NULL
);

-- CreateIndex
CREATE UNIQUE INDEX "GoLink_slug_key" ON "GoLink"("slug");

-- CreateIndex
CREATE UNIQUE INDEX "DiscordInviteLink_slug_key" ON "DiscordInviteLink"("slug");

-- CreateIndex
CREATE UNIQUE INDEX "WikiLinks_slug_key" ON "WikiLinks"("slug");

-- CreateIndex
CREATE UNIQUE INDEX "SlackBotToken_teamId_key" ON "SlackBotToken"("teamId");

-- CreateIndex
CREATE UNIQUE INDEX "ApiToken_token_key" ON "ApiToken"("token");

-- CreateIndex
CREATE UNIQUE INDEX "User_username_key" ON "User"("username");
